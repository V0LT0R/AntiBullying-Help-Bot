import os
import random
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# --- –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ---
ALERT_WORDS = ["—Å—É–∏—Ü–∏–¥", "—É–º–µ—Ä–µ—Ç—å", "–Ω–µ —Ö–æ—á—É –∂–∏—Ç—å", "–ø–ª–æ—Ö–æ", "–¥–µ–ø—Ä–µ—Å—Å–∏—è", "—Ç—Ä–µ–≤–æ–≥–∞", "—Å—Ç—Ä–∞—à–Ω–æ", "–ø–∞–Ω–∏–∫–∞"]
HUMAN_HELP_WORDS = ["–ø—Å–∏—Ö–æ–ª–æ–≥", "—á–µ–ª–æ–≤–µ–∫", "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", "–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", "–∂–∏–≤–æ–π", "–æ–ø–µ—Ä–∞—Ç–æ—Ä", "—Ä–µ–∞–ª—å–Ω—ã–π"]

# --- –ì–æ—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã ---
SUPPORT_REPLIES = [
    "–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç—ã —á–µ—Ä–µ–∑ —ç—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏—à—å üíî. –ü–æ–º–Ω–∏: —Ç—ã –Ω–µ –æ–¥–∏–Ω, –∏ —Ç–æ, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî –≤–∞–∂–Ω–æ.",
    "–¢—ã —Å–¥–µ–ª–∞–ª(–∞) –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª(–∞). –ò–Ω–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —É–∂–µ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å –±–æ–ª—å üåø.",
    "–ö–∞–∂–¥—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ —É–≤–∞–∂–µ–Ω–∏–µ. –¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è ‚ù§Ô∏è.",
    "–≠—Ç–æ –∑–≤—É—á–∏—Ç —Ç—è–∂–µ–ª–æ... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –¥–µ—Ä–∂–∏ —ç—Ç–æ –≤ —Å–µ–±–µ. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Ç–µ–±—è –≤—ã—Å–ª—É—à–∞—Ç—å.",
    "–¢—ã –Ω–µ –≤–∏–Ω–æ–≤–∞—Ç(–∞) –≤ —Ç–æ–º, —á—Ç–æ –¥—Ä—É–≥–∏–µ –≤–µ–¥—É—Ç —Å–µ–±—è –ø–ª–æ—Ö–æ. –¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –¥–æ–±—Ä–æ—Ç—ã –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è üí¨.",
    "–ò–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤—ã—Ö–æ–¥–∞ –Ω–µ—Ç, –Ω–æ —ç—Ç–æ —á—É–≤—Å—Ç–≤–æ –ø—Ä–æ–π–¥—ë—Ç. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ üå±."
]

HELP_REPLIES = [
    "–ü–æ—Ö–æ–∂–µ, —Ç–µ–±–µ —Å–µ–π—á–∞—Å –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ üß†. –û–±—Ä–∞—Ç–∏—Å—å –∑–∞ –ø–æ–º–æ—â—å—é:\nüìû 8-800-2000-122 ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ª–∏–Ω–∏—è –¥–æ–≤–µ—Ä–∏—è.",
    "–Ø –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –Ω–æ –∏–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –Ω–∞—Å—Ç–æ—è—â–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º.\nüìû 8-800-2000-122\nüí¨ https://—á–∞—Ç—ã.–¥–æ–≤–µ—Ä–∏–µ.—Ä—Ñ",
    "–î—É–º–∞—é, —Å–µ–π—á–∞—Å –±—É–¥–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É. –ù–∞–¥—ë–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\nüí¨ https://—á–∞—Ç—ã.–¥–æ–≤–µ—Ä–∏–µ.—Ä—Ñ\nüìû 8-800-2000-122 (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ)."
]

SELF_HELP = [
    "–ü–æ–ø—Ä–æ–±—É–π —Å–¥–µ–ª–∞—Ç—å –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö –∏ –º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã–¥–æ—Ö–Ω—É—Ç—å üåø. –ü–æ–≤—Ç–æ—Ä–∏ —ç—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.",
    "–ò–Ω–æ–≥–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å –≤—Å—ë, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–∏—Ç, –Ω–∞ –±—É–º–∞–≥—É. –≠—Ç–æ –Ω–µ–º–Ω–æ–≥–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–∞–∑—É–º ‚úçÔ∏è.",
    "–ï—Å–ª–∏ –º–æ–∂–µ—à—å ‚Äî –≤—ã–π–¥–∏ –Ω–∞ —É–ª–∏—Ü—É –∏ –ø–æ–¥—ã—à–∏ –≤–æ–∑–¥—É—Ö–æ–º üå§. –î–∞–∂–µ –∫–æ—Ä–æ—Ç–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ–º–æ–≥–∞–µ—Ç.",
    "–ü–æ—Å–ª—É—à–∞–π —Å–ø–æ–∫–æ–π–Ω—É—é –º—É–∑—ã–∫—É –∏–ª–∏ –ø–æ–º–µ–¥–∏—Ç–∏—Ä—É–π ‚Äî —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–ª—É –∏ —É–º—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è üïä."
]

SMALL_TALK = {
    "–ø—Ä–∏–≤–µ—Ç": [
        "–ü—Ä–∏–≤–µ—Ç! üíö –ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?",
        "–ü—Ä–∏–≤–µ—Ç üåø –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å –≤–∞—Å üí¨."
    ],
    "—Å–ø–∞—Å–∏–±–æ": [
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ üíö. –¢—ã —Å–¥–µ–ª–∞–ª(–∞) –≤–∞–∂–Ω—ã–π —à–∞–≥, –æ–±—Ä–∞—Ç–∏–≤—à–∏—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
        "–†–∞–¥–∞ –ø–æ–º–æ—á—å üåø. –ù–µ –∑–∞–±—ã–≤–∞–π –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ.",
        "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üí¨. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –æ—Å—Ç–∞–≤–∞–π—Å—è –æ–¥–∏–Ω(–æ–¥–Ω–∞)."
    ],
    "–ø–æ–∫–∞": [
        "–ë–µ—Ä–µ–≥–∏ —Å–µ–±—è üå±. –ï—Å–ª–∏ —Å—Ç–∞–Ω–µ—Ç —Ç—è–∂–µ–ª–æ ‚Äî —è –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º.",
        "–•–æ—Ä–æ—à–µ–≥–æ —Ç–µ–±–µ –¥–Ω—è üíö",
        "–î–æ —Å–∫–æ—Ä–æ–≥–æ üåø"
    ]
}


# --- –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ ---
async def generate_local_reply(message: str) -> str:
    msg = message.lower().strip()

    for key, options in SMALL_TALK.items():
        if key in msg:
            return random.choice(options)

    if any(word in msg for word in ALERT_WORDS):
        return (
            "–ü–æ—Ö–æ–∂–µ, —Ç–µ–±–µ —Å–µ–π—á–∞—Å —Ç—è–∂–µ–ª–æ üíî\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Å—Ç–∞–≤–∞–π—Å—è –æ–¥–∏–Ω(–æ–¥–Ω–∞). –í–æ—Ç, –∫—É–¥–∞ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è:\n"
            "üìû –õ–∏–Ω–∏—è –¥–æ–≤–µ—Ä–∏—è: 8-800-2000-122\n"
            "üí¨ –û–Ω–ª–∞–π–Ω-—á–∞—Ç: https://—á–∞—Ç—ã.–¥–æ–≤–µ—Ä–∏–µ.—Ä—Ñ"
        )

    if any(word in msg for word in HUMAN_HELP_WORDS):
        return random.choice(HELP_REPLIES)

    return random.choice(SUPPORT_REPLIES)


# --- –ö–Ω–æ–ø–∫–∏ ---
def main_menu():
    return ReplyKeyboardMarkup(
        [
            ["üí¨ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–æ—Ç–æ–º", "üß† –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—É"],
            ["üìò –°–æ–≤–µ—Ç—ã –ø–æ —Å–∞–º–æ–ø–æ–º–æ—â–∏", "üïä –û –ø—Ä–æ–µ–∫—Ç–µ"]
        ],
        resize_keyboard=True
    )


# --- –ö–æ–º–∞–Ω–¥—ã ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name or '–¥—Ä—É–≥'}! üåø\n\n"
        "–Ø ‚Äî –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º, "
        "–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –∫–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥–æ–º, —Ç—Ä–µ–≤–æ–≥–æ–π –∏–ª–∏ —Å—Ç—Ä–µ—Å—Å–æ–º.\n\n"
        
    )
    await update.message.reply_text(text, reply_markup=main_menu())


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()

    if "–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª" in text:
        reply = random.choice(HELP_REPLIES)
    elif "—Å–æ–≤–µ—Ç—ã" in text:
        reply = random.choice(SELF_HELP)
    elif "–æ –ø—Ä–æ–µ–∫—Ç–µ" in text:
        reply = (
            "üåø *–û –ø—Ä–æ–µ–∫—Ç–µ*\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –∫–∞–∫ —á–∞—Å—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∂–µ—Ä—Ç–≤ –∫–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥–∞.\n"
            "–û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ "
            "–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.\n\n"
            "–ê–≤—Ç–æ—Ä: –ë–µ–ª–æ—â–∏—Ü–∫–∏–π –ï–≤–≥–µ–Ω–∏–π –∏ –ë–µ–ª–æ—â–∏—Ü–∫–∏–π –ê—Ä—Ç–µ–º üíö"
        )
    else:
        reply = (
            "üí¨ –†–∞—Å—Å–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å."
        )

    await update.message.reply_text(reply, reply_markup=main_menu(), parse_mode="Markdown")


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    app.run_polling()


if __name__ == "__main__":
    main()
